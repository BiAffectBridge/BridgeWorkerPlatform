bridge.env=local
bridge.user=your-username-here

bridge.worker.appId=your-worker-account-here
bridge.worker.email=your-worker-account-here
bridge.worker.password=your-worker-account-here

synapse.user = your-username-here
synapse.principal.id = your-principal-id-here
synapse.access.token = your-token-here

synapse.endpoint = https://repo-dev.dev.sagebase.org/
prod.synapse.endpoint = https://repo-prod.prod.sagebase.org/

heartbeat.interval.minutes=30
s3.url.expiration.hours = 12
synapse.poll.interval.millis = 1000
synapse.poll.max.tries = 300
synapse.rate.limit.per.second = 10
synapse.get.column.models.rate.limit.per.minute = 12
workerPlatform.request.sqs.sleep.time.millis=125

# Synapse Team IDs, used by the FitBitWorker when creating FitBit tables in Synapse.
team.bridge.admin = 3388390
team.bridge.staff = 3388389
prod.team.bridge.admin = 3388392
prod.team.bridge.staff = 3388391

# This is used by the SQS listener thread as well as the redrive worker.
# Currently, the redrive worker uses the general threadpool. Synchronous upload complete takes ~5 seconds, so we'll
# have 6 threads to make sure we're probabilistically never blocked on thread pools.
threadpool.general.count = 6

# You're only allowed 3 concurrent Synapse connections at a time. As such, there's no point in having
# more than 3 thread pool workers.
threadpool.synapse.count = 3

local.health.data.bucket.raw = org-sagebridge-rawhealthdata-devlocal
dev.health.data.bucket.raw = org-sagebridge-rawhealthdata-devdevelop
uat.health.data.bucket.raw = org-sagebridge-rawhealthdata-devstaging
prod.health.data.bucket.raw = org-sagebridge-rawhealthdata-prod

local.participantroster.bucket = org-sagebridge-participantroster-devlocal
dev.participantroster.bucket = org-sagebridge-participantroster-devdevelop
uat.participantroster.bucket = org-sagebridge-participantroster-devstaging
prod.participantroster.bucket = org-sagebridge-participantroster-prod

dev.synapse.map.table = dev-exporter-SynapseTables
uat.synapse.map.table = uat-exporter-SynapseTables
prod.synapse.map.table = prod-exporter-SynapseTables

dev.synapse.meta.table = dev-exporter-SynapseMetaTables
uat.synapse.meta.table = uat-exporter-SynapseMetaTables
prod.synapse.meta.table = prod-exporter-SynapseMetaTables

local.upload.bucket = org-sagebridge-upload-devlocal
dev.upload.bucket = org-sagebridge-upload-devdevelop
uat.upload.bucket = org-sagebridge-upload-devstaging
prod.upload.bucket = org-sagebridge-upload-prod

local.upload.cms.cert.bucket = org-sagebridge-upload-cms-cert-devlocal
dev.upload.cms.cert.bucket = org-sagebridge-upload-cms-cert-devdevelop
uat.upload.cms.cert.bucket = org-sagebridge-upload-cms-cert-devstaging
prod.upload.cms.cert.bucket = org-sagebridge-upload-cms-cert-prod
local.upload.cms.priv.bucket = org-sagebridge-upload-cms-priv-devlocal
dev.upload.cms.priv.bucket = org-sagebridge-upload-cms-priv-devdevelop
uat.upload.cms.priv.bucket = org-sagebridge-upload-cms-priv-devstaging
prod.upload.cms.priv.bucket = org-sagebridge-upload-cms-priv-prod

local.userdata.bucket = org-sagebridge-userdata-local
dev.userdata.bucket = org-sagebridge-userdata-develop
uat.userdata.bucket = org-sagebridge-userdata-uat
prod.userdata.bucket = org-sagebridge-userdata-prod

local.workerPlatform.request.sqs.queue.url=https://sqs.us-east-1.amazonaws.com/649232250620/Bridge-WorkerPlatform-Request-local
dev.workerPlatform.request.sqs.queue.url=https://sqs.us-east-1.amazonaws.com/649232250620/Bridge-WorkerPlatform-Request-dev
uat.workerPlatform.request.sqs.queue.url=https://sqs.us-east-1.amazonaws.com/649232250620/Bridge-WorkerPlatform-Request-uat
prod.workerPlatform.request.sqs.queue.url=https://sqs.us-east-1.amazonaws.com/649232250620/Bridge-WorkerPlatform-Request-prod
